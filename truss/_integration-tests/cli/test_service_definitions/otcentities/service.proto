syntax = "proto3";

package TEST;

import "google/api/annotations.proto";

import "site.proto";
import "publisher.proto";
import "ad_network.proto";
import "advertiser.proto";
import "account_user_api_key.proto";
import "stats.proto";

// The Site service definition.
service OtcEntitiesService {
  // Find site by platform and package/store_app_id
  rpc SiteGetByAdvertiserPackage (SiteGetByAdvertiserPackageRequest) returns (SiteEntity) {
    option (google.api.http) = {
      get: "/SiteGetByAdvertiserPackage "
    };
  }
  // Find site by id
  rpc SiteGetById(SiteGetByIdRequest) returns (SiteEntity) {
    option (google.api.http) = {
      get: "/SiteGetById"
    };
  }
  rpc SiteFind(SiteFindRequest) returns (SiteEntities) {
    option (google.api.http) = {
      get: "/SiteFind"
    };
  }

  // Find publisher by advertiser_id and ad_network_id
  rpc PublisherGetByAdvertiserAdNetwork (PublisherGetByAdvertiserAdNetworkRequest) returns (PublisherEntity) {} 
    option (google.api.http) = {
      get: "/PublisherGetByAdvertiserAdNetwork "
    };
  }
  // Find publisher by id
  rpc PublisherGetById(PublisherGetByIdRequest) returns (PublisherEntity) {
    option (google.api.http) = {
      get: "/PublisherGetById"
    };
  }
  rpc PublisherFind(PublisherFindRequest) returns (PublisherEntities) {
    option (google.api.http) = {
      get: "/PublisherFind"
    };
  }

  // Find ad network by id
  rpc AdNetworkGetById(AdNetworkGetByIdRequest) returns (AdNetworkEntity) {} 
    option (google.api.http) = {
      get: "/AdNetworkGetById"
    };
  }
  // Find ad network by name
  rpc AdNetworkGetByName(AdNetworkGetByNameRequest) returns (AdNetworkEntity) {}
    option (google.api.http) = {
      get: "/AdNetworkGetByName"
    };
  }
  rpc AdNetworkFind(AdNetworkFindRequest) returns (AdNetworkEntities) {}
    option (google.api.http) = {
      get: "/AdNetworkFind"
    };
  }

  // Find advertiser by id
  rpc AdvertiserGetById(AdvertiserGetByIdRequest) returns (AdvertiserEntity) {} 
    option (google.api.http) = {
      get: "/AdvertiserGetById"
    };
  }
  // Find advertiser by name
  rpc AdvertiserGetByName(AdvertiserGetByNameRequest) returns (AdvertiserEntity) {}  
    option (google.api.http) = {
      get: "/AdvertiserGetByName"
    };
  }

  rpc AccountUserApiKeyGetById(AccountUserApiKeyGetByIdRequest) returns (AccountUserApiKeyEntity) {
    option (google.api.http) = {
      get: "/AccountUserApiKeyGetById"
    };
  }
  rpc AccountUserApiKeyFind(AccountUserApiKeyFindRequest) returns (AccountUserApiKeyEntities) {
    option (google.api.http) = {
      get: "/AccountUserApiKeyFind"
    };
  }
  rpc AccountUserApiKeySave(AccountUserApiKeySaveRequest) returns (AccountUserApiKeyEntity) {
    option (google.api.http) = {
      get: "/AccountUserApiKeySave"
    };
  }
  rpc AccountUserApiKeyAuthenticate(AccountUserApiKeyAuthenticateRequest) returns (AccountUserApiKeyAuthenticateResponse) {
    option (google.api.http) = {
      get: "/AccountUserApiKeyAuthenticate"
    };
  }
  
  rpc StatsByAdNetwork(StatsRequest) returns (StatsByAdNetworkResponse) {
    option (google.api.http) = {
      get: "/StatsByAdNetwork"
    };
  }
  rpc StatsBySite(StatsRequest) returns (StatsBySiteResponse) {
    option (google.api.http) = {
      get: "/StatsBySite"
    };
  }
  rpc StatsByPlatform(StatsRequest) returns (StatsByPlatformResponse) {
    option (google.api.http) = {
      get: "/StatsByPlatform"
    };
  }

  rpc Status(StatusRequest) returns (StatusResponse) {
    option (google.api.http) = {
      get: "/Status"
    };
  }
  rpc Ping(PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get: "/Ping"
    };
  }
}

enum ServiceStatus {
  FAIL = 0;
  OK = 1;
}

message StatusRequest {
  bool full = 1;
}

message StatusResponse {
  ServiceStatus status = 1;
}

message PingRequest {}

message PingResponse {
  ServiceStatus status = 1;
}
