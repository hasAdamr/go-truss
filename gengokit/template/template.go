// Code generated by go-bindata.
// sources:
// NAME-service/NAME-cli-client/client_main.gotemplate
// NAME-service/NAME-server/server_main.gotemplate
// NAME-service/generated/cli/handlers/client_handler.gotemplate
// NAME-service/generated/client/grpc/client.gotemplate
// NAME-service/generated/client/http/client.gotemplate
// NAME-service/generated/endpoints.gotemplate
// NAME-service/generated/transport_grpc.gotemplate
// NAME-service/generated/transport_http.gotemplate
// NAME-service/handlers/server/hooks.gotemplate
// NAME-service/handlers/server/server_handler.gotemplate
// NAME-service/middlewares/endpoints.gotemplate
// NAME-service/middlewares/service.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _nameServiceNameCliClientClient_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x56\xd1\x6e\xdb\xb8\x12\x7d\x96\xbe\x62\x2a\x34\x80\x54\xb8\x72\x7a\x71\xef\x8b\x71\xfd\xd0\xa6\xed\xb6\xc0\xb6\x1b\x24\x59\xf4\xa1\x2d\x16\x34\x39\x92\xb8\xa5\x48\x2d\x49\xd9\x09\x04\xfd\xfb\x62\x48\x59\xb6\xbb\x49\x83\x62\x03\xc4\x96\x47\x33\x67\x86\x33\x67\x8e\xd4\x31\xfe\x8d\xd5\x08\x2d\x93\x3a\x4d\x65\xdb\x19\xeb\x21\x4f\x93\x0c\x35\x37\x42\xea\x7a\xf9\xa7\x33\x3a\x4b\x93\xac\x52\xac\x0e\xdf\xad\xa7\x2f\xe3\xe8\xd3\x79\xcb\x8d\xde\x4e\x97\x52\xd7\xc1\xea\x65\x8b\x59\x9a\x26\x59\x6d\x14\xd3\x75\x69\x6c\xbd\xbc\x5d\x6a\xf4\x4b\x6e\xb4\xc7\xdb\x00\x50\x1b\x53\x2b\x2c\x8f\x5c\x6a\xdb\xf1\x18\x26\x7d\xd3\x6f\x4a\x6e\xda\x65\xf7\xad\x5e\xa2\xb5\xc6\x3a\xba\xb3\x5c\xc2\x4d\x23\x1d\x5c\xa3\xdd\x4a\x8e\x69\xc2\x95\x44\xed\xdf\x31\x2d\x14\x5a\xc8\x86\xa1\x7c\x1f\x8e\x70\xc9\x7c\x03\xcf\xc7\x11\x96\x35\x6a\xb4\xcc\xa3\x58\x72\x25\x97\x4d\xf4\xa4\x2a\x29\x5b\x0c\x7f\x3c\x0e\xb5\x9f\xaa\x4b\x1a\xef\xbb\x9f\x09\x23\xff\x2c\x4d\xba\x4d\x70\xbf\x7c\x75\x1a\x90\xa5\x45\x9a\x6e\x99\xa5\x96\xff\x01\x6b\x98\xfa\x59\x5e\x32\xeb\xf0\xbd\xf6\xb3\x95\x5a\x5b\x5e\x77\x4a\x4e\x26\x9a\x4a\x79\x61\xda\x8e\xf1\xc9\x12\xbb\x54\x7e\xb2\xac\xab\xa2\xa5\xdb\x94\x57\x58\x4b\xe7\xd1\x0e\x43\x39\xf5\xac\xfc\xc8\x5a\x1c\x47\xfa\x85\x96\xb2\x57\xbd\xe6\x61\xfc\x79\x01\x43\x9a\x18\x57\xbe\xb9\x95\x3e\x77\xfd\x26\x1a\x8b\x74\x4c\xd3\xe5\x12\x26\x03\xe0\xad\x74\xde\x81\x37\xc0\xb8\x07\xe6\xc0\x37\x08\x04\xe2\xa5\xd1\x4c\x05\xa8\x05\x6c\x7a\x0f\x3b\xa9\x14\x58\xf4\xbd\x0d\x51\x1e\xb8\x11\x48\x91\x04\x47\x51\x8c\xfb\x7e\x8a\x00\xa9\x9d\x47\x26\xc0\x54\xc0\x99\x52\x52\xd7\x30\x95\x02\x42\x5a\xe4\x5e\xdd\x95\x71\xf8\xd2\x81\x30\x1a\x43\x05\x4a\x99\xdd\x1e\x4d\x60\x85\x16\xc5\x5c\x4b\xa8\x71\x83\x01\x0e\xc5\x02\x9c\xd4\x1c\x41\x56\x33\xee\xae\x41\xbb\xbf\x3d\x27\x21\xb4\xca\x9a\x16\x3c\xe5\xda\x63\x2d\x40\x53\x4a\x53\x3d\x90\xc9\xa1\x87\xbe\x83\xcd\xdd\x69\x18\x81\xed\x4c\xaf\xc4\xa1\x8e\x32\x36\x7c\x6e\x2f\x48\xed\xa9\xef\x13\x09\x02\xbf\x5e\x0a\x61\x21\xfe\xad\x81\xf6\xae\xbc\x0e\x0c\xc8\x33\xba\x5b\x32\x21\x6c\xb6\x80\x8c\xfe\xdf\xdd\xdc\x5c\x02\x19\xd0\x39\x2a\x8f\x09\xe1\xb6\x3c\x2b\xd2\x24\x10\xfc\x61\x24\xba\x3b\x23\xad\xfe\x77\xfe\xdf\x73\xba\xa8\xaf\x2e\x2f\x20\x27\xd0\xe2\x7e\xd4\x62\xbf\x85\x48\x46\xae\x24\x74\x16\x5d\xdf\xa2\x03\x6d\xc0\x45\x8e\x81\x90\x8e\x9b\x2d\xda\x3b\x70\x77\xce\x63\xbb\x00\xa6\x05\xe0\x6d\x87\xdc\x3b\xe8\x1d\xda\x40\x03\x42\xea\xac\xd9\x4a\x81\xb1\xaf\x61\x06\x27\x89\xf5\x1e\x73\x1a\x7e\xcc\xd6\x51\x73\x89\x08\x16\x2b\x85\xdc\xa3\x00\xa9\x03\x1c\xc1\x50\x55\x1b\xa9\x99\xbd\x0b\x69\xc9\x34\x99\x69\x6b\x27\xc5\x73\xab\x60\x7c\xee\x2d\xd3\x8e\x56\x32\x34\x23\xf4\xc8\x05\x24\x0a\xdd\x32\x2b\x4d\xef\xf6\xa1\xdc\x68\xe7\x6d\xcf\xbd\xb1\x0e\x36\xc6\x37\xd3\x91\xa0\x31\xce\xaf\x82\x74\xee\x57\x35\x4d\x93\x61\x00\xcb\x74\x8d\xf0\xb4\x45\xdf\x2c\xe0\x29\xb3\xb5\x83\xd5\x1a\xca\x8b\x00\xf7\xd2\xd6\xae\xfc\x80\xbe\xa1\x0b\x18\xc7\x34\x49\x2a\x37\x0c\xc1\x7b\x1c\xc9\x31\x0c\xec\x23\xee\xde\x2a\x56\x5f\xa3\xcf\xb3\x61\xb8\x31\xbf\x9a\x1d\x5a\x98\xbc\xb2\x45\x74\x22\x3e\xff\xa6\xdf\x90\x04\x14\x94\x19\xb5\x18\xc7\xf4\xc0\xaa\x61\x38\x4e\xfa\x52\x29\x82\x74\x94\x93\x06\x1a\x20\x7e\x77\xf4\x1c\x58\x07\xee\x46\x29\x48\xaa\xd6\x97\x6f\x3b\x2b\xb5\xaf\x72\xe3\xca\x6b\x2f\xd0\xda\x05\x64\xd1\xd5\x54\x70\xe6\x56\x5f\x74\xb6\xa0\x8d\x22\xe0\xcf\xe7\x5f\x89\x78\x01\xee\x92\xc2\x5e\x63\xc5\x7a\xe5\x5d\x5e\xfc\x00\xed\x8b\xce\x7e\x74\xfb\xba\xdf\x70\xd3\xb6\x4c\x8b\x90\xac\x08\xa7\xf9\x89\xc6\x3e\x0f\x9d\x7d\x10\x1e\xe0\xcc\x85\x33\xdc\xd3\xdc\x98\x0b\xb5\x88\x20\x63\x9a\xc8\x0a\x14\xea\x7c\x3a\x6f\x01\xff\x87\xff\xc4\x4e\xcd\x1d\x0c\x47\x9d\x44\xef\x05\xc5\x4c\xed\x0d\x8a\x9e\x17\x47\x33\xd9\x2f\x4b\xb7\x29\x87\xe1\x17\x43\xba\x0c\xf7\xab\x74\x92\xa0\x8d\x6b\x1c\x44\x3e\x0e\x4d\x56\xf0\x6c\x16\x8b\x27\x6b\xc8\xb2\x50\xc9\x84\xba\x20\x57\x58\xc3\xe1\x71\x45\x44\xca\xe7\x88\x22\x4d\x46\x40\xe5\x82\x20\x3e\x9b\xa5\xe2\x80\xc3\x8d\xd6\x11\x64\xb5\x86\x20\x16\xaf\x25\x53\xf9\xec\xba\x88\xc6\x4f\xd2\x37\xef\xb5\x43\xde\x5b\xcc\x8b\x23\xe3\x8d\x6c\xd1\xf4\x3e\xa7\x77\x81\xf2\x1a\xb9\xd1\xa2\xa0\xd6\xc8\x2a\x80\x3e\x59\x83\x96\x2a\x64\x7a\x70\x34\x81\xce\xb0\x6b\xa4\x22\x69\x60\xe1\x99\x40\xf8\xb4\x87\x1a\x83\xc0\xae\xe0\x6c\x9b\x85\x32\x09\xfb\xa8\xef\x34\xac\x24\xe8\x74\xf0\x2e\x2f\x94\x71\x71\x36\xdf\x35\xe8\xf0\x1a\x10\x1a\x44\xce\x87\xde\xfc\x68\x09\xc2\x28\x56\xa4\x7a\x16\x5b\xe3\x71\x96\x2d\xd7\x21\x97\x95\x44\x31\xb1\xf5\x98\x0c\xf7\x1c\xff\x11\xfc\xb3\x6d\x60\xe7\x74\xc2\x13\x62\xa5\x89\xdb\x49\xcf\x9b\x28\x01\x44\xc8\xbc\xf8\x7c\xfe\x95\x50\x7f\x66\x43\xc2\x7e\x70\xe6\xf0\xbe\x15\x58\x85\x01\x1d\x64\x69\xe2\xf1\x71\xc6\x17\xab\xaf\xc4\x47\x5a\x95\x90\xa7\xfc\xc0\xac\x6b\xd8\x2c\x31\x71\x30\x7f\xf5\xe8\xfc\x4c\xa8\x93\xf7\xb6\x72\x46\xcf\xf7\x10\x17\x4c\xa9\x58\x5b\x98\xeb\x3d\xa4\x79\x84\x35\xfb\x77\x88\x07\x12\x7d\xdf\xd7\x13\xea\x24\xb1\xe6\xed\x5c\xed\xfe\x11\x74\xa8\x73\x7a\x8f\x2d\x5f\x31\xfe\xad\xb6\xa6\xd7\x82\xc8\x3f\x9d\xf2\x5f\x96\xfc\x8f\x6c\x8f\x15\x3b\x21\x07\xc5\x55\x3a\xcf\xe2\x8c\xe1\x2a\x56\x83\x02\x76\xd2\x37\xab\xc0\xc5\x13\xc7\x07\x9a\x7d\x82\x15\x15\x08\xae\xd0\x75\x46\x8b\x87\xb1\xb6\x47\x8f\x1d\xda\x3b\x92\xfd\xd5\x63\xc2\x38\xfd\x3a\x4f\xc7\xf4\xef\x00\x00\x00\xff\xff\xfd\xa3\xc8\xcd\x88\x0c\x00\x00")

func nameServiceNameCliClientClient_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameCliClientClient_mainGotemplate,
		"NAME-service/NAME-cli-client/client_main.gotemplate",
	)
}

func nameServiceNameCliClientClient_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameCliClientClient_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-cli-client/client_main.gotemplate", size: 3208, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceNameServerServer_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x51\x6f\xdb\x36\x10\x7e\x96\x7e\x05\x4b\x74\x80\x3c\x38\x54\x81\xad\x7b\xc8\xea\x87\x26\x69\xd3\x62\x49\x67\xc4\x2e\xfa\x38\xd0\xd2\x99\x22\x22\x91\x02\x49\x2b\x0e\x04\xff\xf7\xe1\x48\x49\x96\x1b\xdb\xed\x43\x0b\x34\xb2\x78\x1f\x3f\xdd\x7d\x77\xbc\x63\xcd\xb3\x47\x2e\x80\x54\x5c\xaa\x38\x96\x55\xad\x8d\x23\x49\x1c\xd1\x75\xc9\x05\xc5\x67\xe5\xf0\xa1\xa0\x7f\xa4\x85\x73\xf5\xf8\x77\x5a\xd7\x46\xaf\x71\x45\x5b\x1a\xc7\x51\x9a\x92\x3f\x72\x32\xe7\xc6\x3d\xc7\x11\x15\xba\xe4\x4a\x30\x6d\x44\xba\x4d\x71\x4b\xa6\x95\x83\xad\x67\x13\x5a\x8b\x12\xd8\x08\x22\x4c\x9d\x75\x1c\xb7\x9a\xfc\x23\x1d\xa2\xa4\x2b\x36\x2b\x96\xe9\x2a\x15\xfa\xe2\x51\xba\x14\xff\x97\x5a\x74\xc0\x65\x21\x2d\x59\x80\x69\x64\x06\x71\x54\x70\x95\x97\x60\x08\x6d\x5b\xf6\xd9\x87\x33\xe7\xae\x20\x17\xbb\x1d\x49\x3b\x9b\x4d\x2d\x98\x06\x0c\x8d\x23\xdb\x64\x47\x91\x02\x14\x18\xee\x20\xa7\x71\x54\xaf\x3c\x64\x7e\x75\x08\xa2\x71\x54\xc9\x3c\x2f\xe1\x89\x1b\xb0\x47\x59\x46\x76\x1a\x4f\xe2\x78\xbd\x51\x99\x57\x3a\x99\x90\x36\x8e\x1a\x6e\x50\xea\x28\x87\xd5\x46\xbc\xcf\x73\x43\xfc\xbf\x19\x41\xed\xd9\xc2\x19\xa9\x44\x42\xbd\x95\xf1\x3c\x37\x74\x4a\xe8\xe5\xdb\x37\x7f\xbd\xc1\x1f\x37\xb8\x4c\xb8\xca\x49\x05\xce\xc8\xcc\x92\x52\x5a\x07\x8a\x20\x12\xac\xa5\x93\x38\x8a\x30\x3d\x7b\xe2\xef\x99\xd1\x3a\x26\x7e\xeb\x89\x3f\x2d\x97\xf3\x63\x5c\x98\x9a\xd3\x5c\x68\x1d\x73\xfd\xe9\xb9\xc4\xc3\xfc\x9a\x24\xc8\x38\x39\x42\x39\x09\xf9\xfb\x6a\x81\x80\x6a\xa4\xd1\xaa\x02\xe5\x48\xc3\x8d\xe4\xab\x12\xec\x94\xc8\x35\xb1\xe0\x18\xf9\x58\x72\x61\x49\xc1\x1b\x20\xb5\x91\xda\x48\xf7\x4c\x74\x03\x86\x7c\x50\x0d\xe2\x2d\x8b\x23\xb9\xf6\xdc\xe4\x72\x46\xb4\x65\xb7\xe0\x40\x35\x09\xbd\xf9\x70\xf5\xf5\xf6\xbf\xf7\x37\x37\x0f\x74\xf2\x77\x00\xbc\x9a\x11\x4a\x51\xff\xe8\xf7\xbd\xf2\x33\x6f\x8b\xa3\x9d\x27\xf2\xa7\xe0\x90\x68\xfe\xef\xc3\x12\x29\xbc\x69\x44\x31\x48\x3c\x23\xeb\xca\xb1\x45\x6d\xa4\x72\xeb\x84\x5e\xfe\x66\xe9\xd4\xa3\x27\x3d\xeb\x11\xf7\x50\x9a\x93\xde\x8d\xa8\xc7\xce\x1d\xa1\xb9\x7d\x98\x5f\x9f\xa4\x19\x12\xb7\xa7\x09\xba\xd7\x39\x77\xd0\x27\x04\x2c\xaa\xed\x0a\x78\x0e\x3a\xaf\x00\x94\xd7\xf8\xc9\x48\x87\x89\x5b\x3d\xfb\x8c\xdb\x38\xf2\x89\x9f\x73\x63\x21\xe9\x52\x78\xa7\x85\x90\x4a\x90\x5c\x63\x75\xb3\x50\xda\xa5\x16\x02\xfc\x83\xdd\xf9\x9f\x71\x84\xfe\x74\xcb\x33\x6f\xf8\x02\x4f\x77\x5a\xac\x2b\x17\x10\x89\xb6\x6c\xe1\x72\xbd\x41\xd1\x5e\x20\xaf\x43\xe7\x48\xc2\xfa\x84\x7d\x93\xae\x48\xa8\x43\x9d\x11\x71\x03\x6b\xbe\x29\xdd\x52\x56\x60\x1d\xaf\xea\xaf\xcb\xeb\x9f\x67\xc9\x78\x59\x82\x39\x64\xba\xf6\x6b\x21\x7d\x01\x8d\x81\x24\xb4\xb2\x02\x8b\xbb\x80\xb2\xd4\x58\xc7\x39\xac\xa1\x0f\xf7\x00\x21\xb4\xce\x57\xcf\x40\x3b\x95\xae\x36\x56\x2a\xb0\xf6\x50\x26\x1b\x3a\x17\xa9\x57\xac\x6d\x6f\xf5\x17\x5e\x01\x61\x5d\x3b\x63\xf8\xb6\xdb\x2d\x7c\xbb\x0a\xf2\xf5\xf0\x19\xe9\xba\x19\xc6\xd4\xc1\x13\x8c\x37\x4d\xc9\x37\xc3\xeb\xbe\x23\x92\x27\xe9\x0a\x32\xea\x44\x8c\x2c\x00\x08\x63\xe3\xee\x94\x76\xac\x4c\xe8\x83\x4f\x8c\xb7\x21\x69\xff\x9d\x0e\x31\x19\x6a\xe9\x83\xca\x6b\x2d\x95\x3b\x0c\x2d\x89\xa3\xb6\x35\x5c\x09\x20\xaf\x25\x96\xec\x10\xd7\x3d\xb8\x42\xe7\x16\xdb\x64\x1c\x45\x6d\xbb\xd4\x77\xfa\x09\x0c\x79\x2d\xbb\x90\x07\xc2\x19\xb1\x4d\xc6\xee\xf9\x23\xb4\xed\x0b\xeb\xc8\x91\xb6\x05\x95\x23\x5b\x27\xb6\xd7\xa0\xc7\xd9\x9f\x53\x01\x7a\xb8\xd7\x61\x78\x43\xcf\xd1\x89\x81\xad\xfd\xe9\xb8\x5e\x78\x7c\x89\xbd\xf3\x4c\xbc\xd3\x51\x24\xbb\x51\x24\x16\x4a\xc8\x1c\xe4\xbf\x2a\xa4\x97\xb9\x1d\x88\x93\x01\xd5\x49\x79\x0f\x59\xc1\x95\xcc\x78\xb9\x4f\x2f\x18\x93\x61\xe4\x15\x7f\x84\x04\xcd\x04\x8c\xd1\x78\x58\x32\xb7\x45\x43\x37\xe6\xd9\x15\xcf\x1e\x85\xd1\x1b\x95\xf7\xcd\xe2\xb3\x72\x60\xcc\xa6\x76\x43\x05\xc7\x91\xd0\xc3\xcb\x60\xfe\x14\x16\x12\xfc\x54\xb7\x35\x0c\xbd\x30\x49\xfa\x7d\x38\x54\xc3\x3c\xed\x8f\xfa\xe5\x8f\x3a\x86\xe1\xca\x62\x67\xc6\x33\xea\x47\x80\x3f\xa1\x51\x85\x3b\xfd\x50\xec\x8e\x14\xdc\x6f\xb6\xfe\x4c\x55\x2c\x38\x93\xd0\xd4\xe3\xc3\x95\x27\xa5\xd3\x00\xef\x3c\xfd\x88\x9e\x78\x0b\xfb\xac\x72\xd8\x4e\xce\x6c\xcd\xaa\xbc\x94\x0a\x4e\x33\x5c\x07\xc0\x39\x0e\xfc\x23\xcb\x33\x1c\xf3\x00\x38\xc7\x61\x9f\xab\x95\x2e\x4f\x53\x2c\xbc\xfd\x1c\x83\x33\x3c\x3b\xe3\xc3\x12\xcd\x13\xaf\xef\xb8\x43\x76\x57\x85\xfd\x04\xc6\x2f\xf8\xa2\x7a\x77\x11\xa8\xee\x7c\x96\xdf\xab\xdc\x67\x22\xd9\x23\xa7\xa4\xc2\xc6\xd3\x97\x93\xbf\xaf\x0c\x29\xfd\x25\x35\x81\x94\xe1\xfe\xd4\x1f\x7d\xec\x3f\xb8\xda\xd7\x64\xe6\xb6\x53\x32\x9c\x93\x69\xd7\xfc\x27\x27\x82\xec\x07\xf9\x0f\x63\xec\x81\x53\x52\x8c\x43\xf4\xd7\xa8\x5f\x1b\x22\x52\x86\xaa\x2f\xd5\x14\xcf\x2e\x6e\x57\xe0\x3a\x97\x12\xea\xb2\x1a\x5d\xef\x2f\x0f\xe8\xba\x5c\x7b\xe0\xab\x19\x51\xb2\xf4\x5f\x1e\xa2\x01\x63\xf0\xd5\x80\xdb\x18\x15\x47\xbe\x75\x45\xd6\x34\x63\xfd\xf0\x92\x12\x26\xd9\x77\xf2\x21\xb7\x6f\xb2\xfe\x12\xd9\x9f\x3d\xe3\x4f\x5e\xbd\x62\x0f\x20\xd0\x27\xd3\xb6\x47\xc7\x62\x62\xa7\xc4\x9a\xe6\x64\x85\x8d\x23\xe8\xdd\xb5\x2c\x08\x5e\xaa\xb1\xcc\x0f\x1b\xf5\xea\x70\xd2\xc3\x56\xa2\x5a\xef\x2e\x42\x0f\xda\xc5\xff\x07\x00\x00\xff\xff\x70\x1a\x7b\x18\x2f\x0d\x00\x00")

func nameServiceNameServerServer_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameServerServer_mainGotemplate,
		"NAME-service/NAME-server/server_main.gotemplate",
	)
}

func nameServiceNameServerServer_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameServerServer_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-server/server_main.gotemplate", size: 3375, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedCliHandlersClient_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\x4d\x8f\xda\x30\x10\x3d\xdb\xbf\x62\x84\x22\x94\x54\x60\xee\x48\x3d\x40\xd5\x22\x0e\xad\x10\xed\x1f\x30\xc9\x90\x58\x4d\x1c\xaf\xe3\xec\x87\x46\xfe\xef\x2b\x1b\x43\x96\xbd\xb0\x97\x64\xf2\xde\x9b\xe7\xf1\x9b\x18\x59\xfe\x97\x35\x42\xd9\x2a\xd4\xae\x91\xba\x6a\xd1\x72\xae\x3a\xd3\x5b\x07\x39\x67\xe6\x04\x33\xa2\x4c\x1c\xb6\xfb\x88\x1d\xa4\x6b\x60\xe9\xfd\x8c\x17\x9c\x13\xc1\x8b\x72\x0d\x64\x0e\x61\xfd\x1d\x84\xf7\x9c\x11\x59\xa9\x6b\x84\x4c\x05\x28\x73\x28\xfe\xa2\x7d\x56\x25\x8a\xdf\xe8\x9a\xbe\x1a\x82\x68\xb5\x02\xa2\x4c\x89\x3f\xb2\x43\xef\x41\x75\xa6\xc5\x0e\xb5\x1b\xe0\x2a\xe6\xec\x3c\xea\xf2\xa3\x2a\x27\x8a\x87\x29\x5d\xe1\x6b\x34\xfe\x11\x87\xde\xd8\x7a\x88\xde\xa1\x80\x9b\x9c\x68\xd7\x87\x0a\xc4\xaf\x51\x97\x4e\xf5\x3a\xf0\x01\x47\x5d\x79\x5f\x40\xfe\xcd\x9c\xc4\x4d\x95\x29\x71\xc4\xa7\x11\x07\xf7\xef\xcd\x60\xf2\x58\x00\x5a\xdb\xdb\x82\x38\x63\xf6\xc2\x86\x4b\x3d\xec\x0b\x7a\xa2\x65\x0a\xa7\x43\xd7\x84\xb6\x2f\x0d\x1e\xb2\xe5\x8c\x4d\x31\x1a\x69\x65\x17\xa3\x0c\x3e\x22\x6a\x93\x26\x9e\xa1\xce\x20\x75\x05\x79\x7c\xe8\xde\xa5\x0e\xb1\x1f\xb6\x72\xc0\x30\x54\x71\x87\x1f\xd1\xa0\x74\x58\x15\xf7\xf0\x4f\x3d\x76\x45\xb2\x65\xd3\xed\x2e\x64\x5a\xd3\x1a\xe6\x9f\x99\x5d\xbf\xb1\xb5\xf7\x8b\xdb\x38\xd8\x0e\x08\x0f\x7d\x1e\xdb\xe8\x6a\x4a\x62\xfa\x48\x54\xac\x7d\x5c\x8a\x1b\xad\x86\x79\x5a\xce\x02\xb4\x6a\x39\x8b\x7f\xe1\x45\x76\x7d\xbf\x07\x00\x00\xff\xff\x50\xcc\x31\x90\xe8\x02\x00\x00")

func nameServiceGeneratedCliHandlersClient_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedCliHandlersClient_handlerGotemplate,
		"NAME-service/generated/cli/handlers/client_handler.gotemplate",
	)
}

func nameServiceGeneratedCliHandlersClient_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedCliHandlersClient_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/cli/handlers/client_handler.gotemplate", size: 744, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x55\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x62\x6a\x04\x85\x14\x28\xd4\x3d\x85\x2f\xeb\xdd\x2e\xb6\x68\x52\x23\x1b\xb4\x87\xc5\xa2\xa0\xa9\xb1\x4c\x58\x26\x55\x92\x76\x6c\x08\xfa\xef\xc5\x90\x94\x23\x7b\x93\x3d\x04\x11\x87\x8f\xf3\xf1\x66\xde\xb8\xaa\x60\x29\xe4\x56\x34\x08\x8d\xed\x24\x74\xd6\x1c\x54\x8d\x0e\x04\x34\x4f\xcb\x05\xc8\x56\xa1\xf6\xb0\x36\x16\xfc\x06\xa1\xef\xf9\x57\xb4\x07\x25\x91\x3f\x8a\x1d\x0e\x03\xb8\x74\x64\xdd\xc4\x0d\x63\x6a\xd7\x19\xeb\x21\x67\xd9\xac\x31\xad\xd0\x0d\x37\xb6\xa9\x8e\x95\x46\x5f\x49\xa3\x3d\x1e\xfd\x2c\xdc\x99\xa6\x45\x3e\x81\xd0\xf3\xf7\x6f\xaa\x1d\x7a\x51\x0b\x2f\x02\x44\xf9\xcd\x7e\xc5\xa5\xd9\x55\xdd\xb6\xa9\xd0\x5a\x63\xdd\x8c\x5d\xde\x34\xe6\x6e\xab\x7c\x45\x7f\xa8\xeb\xce\x28\x4d\x81\xc9\x97\xb7\x42\xbb\x90\xe5\x3b\xf8\x33\x20\x25\xc5\xb2\xaa\x82\xe7\x8d\x72\x90\x38\x60\x99\x3b\x48\x98\xf5\x3d\xff\x12\xca\x5d\x0a\xbf\x81\xbb\x61\x80\xaa\x41\x8d\x56\x78\xac\x67\x2c\xeb\x56\x01\xb2\xfc\x70\x09\x9a\xb1\x82\xb1\xaa\x82\x47\x7c\x01\x8b\x7e\x6f\xb5\x03\xa1\x47\x3e\x61\x25\xe4\x16\x6b\x58\x9d\xae\x3a\x21\x8d\xd6\x28\xbd\x32\x9a\xc3\x17\x0f\xca\x51\x5f\xc8\x8f\x45\xd7\x19\xed\xd4\x4a\xb5\xca\x9f\xc0\xac\x43\xc3\xa4\x68\x5b\xb4\xe0\x0d\xd4\x4a\xb4\x25\x08\x5d\x43\x2b\x3c\x5a\x90\xad\x71\x58\x46\xd0\xab\x4f\xb6\xde\x6b\x49\x39\xe5\x64\x84\x5b\xaa\x9c\x2f\x42\xe8\x85\xd1\xba\x04\xd3\x11\xce\x01\xe7\xc9\xfc\x57\x30\x14\x90\x77\x2b\xde\xf7\x9f\x0d\xcd\x05\x5c\x4d\x09\x9d\xd0\x96\x10\x5a\x54\x40\xcf\xb2\x83\xb0\x20\x65\x2a\x6a\x61\xf4\x5a\x35\x8c\x65\x34\x66\xff\x96\xb0\x86\xfb\x39\x58\xa1\x1b\x3c\x87\xeb\x59\x96\xa1\xb5\x74\xb1\xce\x7f\x95\xb2\x60\x59\xa6\xd6\xe4\x10\x7e\x99\x83\x56\x6d\x40\x64\x91\x48\x3a\xa7\x60\x8e\xff\x63\x45\x97\xa3\xb5\x25\xcc\xa4\xd0\xda\x78\x10\x5d\xd7\x9e\x92\xe7\x19\x39\x1a\x58\x36\x30\x96\xc9\x49\x3d\x8e\x22\x7d\xfb\x7e\x31\x27\x17\x05\x53\xb8\xb7\x6e\x3f\xe0\xda\x58\xcc\x29\x99\x34\xe7\x7f\x8b\x76\x8f\xee\xd9\x7c\x7e\x5a\x2e\x1e\xd2\xf8\xe6\x52\xf2\x0d\x8a\x1a\xad\x2b\x8a\x92\xc2\x67\x7d\x7f\x07\x2f\xca\x6f\xe0\xc6\x23\x05\xe7\xc3\xc0\xb2\x89\xb5\xdb\x36\x81\xda\xfb\x39\x21\x78\x52\x6d\xe4\x97\xa2\x11\x32\x72\x76\xa3\x46\xd0\xd8\x85\x07\xf4\x1b\x53\xbb\x08\x0c\xdc\xf7\xfd\xb3\xf9\xd3\xbc\xa0\x85\x1b\x95\x9a\xf4\x29\xc9\x03\x46\x9d\xf0\xd1\x12\x5e\x05\x7e\x29\xcc\xfb\x0f\xe7\x70\xc9\xc8\x23\xbe\x44\x52\xf2\xf8\x96\x18\xd1\x65\xfa\x9e\xf5\xfd\x58\xd3\x30\xf0\xbe\x9f\xe6\x1b\x8d\xb3\x29\x54\x5d\x1b\xdd\x41\xf2\x4f\x5a\x9a\x1a\x89\xd8\x09\xe2\x09\xff\xdb\xa3\xf3\x53\xdc\x47\x7c\x13\x17\x04\x83\x23\x70\x3a\xbf\x37\x8a\x8f\xd7\xcf\xa7\x6e\x4c\xa8\x1f\x46\xec\xc5\xa8\x70\xce\x93\xbd\x38\x53\x96\x17\xc1\x92\x3a\x83\xba\x4e\xdd\x4c\x5f\xe3\x07\x1b\x27\x36\x56\x13\xdf\xba\x9e\x00\xd3\x5e\x5e\x37\x92\xf6\x47\x70\xf7\x43\x0f\xee\x01\xe0\x67\xcd\x2d\x5f\x63\x67\x43\x49\x42\x61\x03\x63\xfe\xd4\xe1\x85\x16\xc1\x79\xbb\x97\x9e\x44\x95\xc6\x14\xbe\x7d\x77\xde\x2a\xdd\x10\xbe\xaa\x60\xaa\x05\xda\x42\x02\x68\x73\x84\x93\xdf\x08\x0f\x3b\x53\xab\xb5\x42\x17\x17\xcc\x79\x77\x91\xce\x43\xb4\x8b\xf7\xf4\x34\xbf\x9d\x26\x50\x44\xf9\xb2\xb8\x8f\x16\xfe\x38\xaa\xe8\x2b\xea\x3a\xdf\xe2\x29\x6c\xa0\x98\x51\x71\xe9\xac\x3f\x93\x1a\xdc\x1a\x78\xcb\x71\x58\x17\x66\xd4\x20\xcc\x81\x5c\xb2\xe9\x02\x21\x51\x0e\x29\xfe\xcf\x94\x1c\x72\x19\xc9\x29\xae\x14\x90\x66\xf1\x77\x72\x72\x95\x97\xf4\xc7\xd1\x2f\x5f\xc4\xff\x25\xec\x6a\xb8\x1d\x7f\xe2\xf8\xc3\xc7\xe2\x1a\x11\xd2\x26\xfd\x76\x42\x4d\x7b\x92\x8d\xab\x73\xfb\xba\x3a\x43\x62\x41\xb5\x6a\x0d\x87\x12\x4c\xb8\x93\xfe\xc8\x43\x1d\xf9\xb6\xe0\x79\xca\xfa\x37\xba\x8c\x02\x8f\x8e\xe7\xb4\x24\x89\xe9\x70\x2c\x61\x5b\xc2\x21\x4c\xf4\x10\xd6\x65\x5c\xbe\x11\x3a\x5d\xbf\xb7\xbb\x1a\xe6\x70\x2e\xe0\x0f\xa3\x74\x7e\xbb\xab\xcb\x57\xd3\x92\xde\x44\xaf\x9c\xf3\xa2\x18\xdd\x25\x66\xa4\x3f\x46\xde\xff\x0f\x00\x00\xff\xff\xe3\x54\x2c\xcd\x98\x08\x00\x00")

func nameServiceGeneratedClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientGrpcClientGotemplate,
		"NAME-service/generated/client/grpc/client.gotemplate",
	)
}

func nameServiceGeneratedClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/grpc/client.gotemplate", size: 2200, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func nameServiceGeneratedClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientHttpClientGotemplate,
		"NAME-service/generated/client/http/client.gotemplate",
	)
}

func nameServiceGeneratedClientHttpClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/http/client.gotemplate", size: 105, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x4d\x6f\xdc\x36\x10\x3d\x8b\xbf\x62\xba\x30\x90\x55\x20\x73\xef\x01\x7c\x48\x83\x7e\xf8\x90\x20\x68\x52\xf4\x50\x14\x01\x57\x1c\xad\x08\x53\x24\x43\x52\x6b\x6f\x05\xfd\xf7\x62\x48\x49\x2b\xd7\x42\xeb\x83\x21\x2f\x45\xbe\x79\x7c\x6f\x3e\xe4\x44\xfd\x20\x4e\x08\xe1\x5c\x33\x76\x38\xc0\xd7\x56\x05\x68\x94\x46\xa8\xad\x89\x42\x99\x00\x1d\xc6\xd6\xca\x00\xd1\x42\x27\x1e\x10\x94\x91\xea\xac\x64\x2f\x34\xa0\x91\xce\x2a\x13\x03\x34\xde\x76\x10\xd0\x9f\x55\x8d\xa1\x22\x24\x8f\xdf\x7b\x0c\x11\x84\x91\xe0\x31\x38\x6b\x02\x42\xbc\x38\x4c\x48\xb4\x15\x21\xb6\x36\xe0\x15\xa5\x02\x11\xe0\x11\xb5\xa6\x27\x9a\xda\x4a\xf4\x81\x00\x08\x4f\xe2\xf4\xbb\xb1\x7e\x3a\x98\xd0\xaa\xb4\x20\xb4\x06\xdb\x80\xed\x3d\x84\xde\x39\xeb\x23\x4a\x88\x5e\x98\x40\xff\x53\x38\x25\xb4\xfa\x5b\x44\x65\x0d\xa1\x35\xd6\x77\x22\x06\x0e\xf7\x11\x84\x0e\x16\x94\xa9\x75\x2f\x31\x2c\x6c\xa0\x53\x52\x6a\x7c\x14\x1e\x03\x67\x4c\x75\x09\x68\xcf\x8a\xdd\xc9\x6a\x61\x4e\xdc\xfa\xd3\xe1\xe9\x60\x30\x1e\x48\x2a\x7c\x8a\x3b\x46\x2f\x55\x6c\xfb\x23\xaf\x6d\x77\x38\xd9\xdb\x07\x15\x0f\xf4\x37\x83\xd2\x16\x77\x84\xdd\x30\xf0\xcf\x3f\xde\x27\xc8\xcf\x22\xb6\x70\x3b\x8e\x3b\x56\x26\x07\x7e\x5a\x34\xad\xad\xd6\x58\xc7\x30\x5f\x2e\xb6\x2b\xad\x20\xb6\x22\x42\x6d\x3b\x47\x4a\x08\x03\x42\xca\xd9\x00\xba\xd5\x9b\x40\x60\x1d\x0a\x13\x49\xef\x23\x42\x1f\x50\x92\xb0\x02\x5a\xd4\x0e\x3d\x84\xe8\xfb\x3a\x56\xf4\x7a\x0a\xb5\x1d\x49\x99\x68\x41\x10\x5c\x50\xe6\xa4\x11\x9c\xf0\xa2\xc3\x88\x9e\xb3\xc3\x81\xd6\xef\x0d\x88\x6c\xa9\xaf\x40\xc5\x37\x81\x82\x35\xbd\x4e\xd6\x34\xbd\xa9\x49\xf6\x89\xb2\x41\x72\xc6\x82\x75\xe8\x45\x44\xb0\x74\xd6\xa1\xbf\x9d\x03\x12\xe0\x51\x04\x15\x38\xfc\x6c\x3d\xe0\x93\xe8\x9c\xc6\x0a\x2e\xb6\x87\x4e\x9d\xda\x08\x4e\x04\x4a\x8b\x95\x54\x44\x70\x09\x94\xe3\x38\x6f\x65\x5f\x63\x92\x41\x18\x68\x63\x74\xfc\x57\x61\xa4\x26\x8e\x8f\x2a\xb6\x80\xa2\x6e\xa7\xec\x86\xfd\x1c\xbd\x84\x47\xe5\x51\x42\xef\x32\x68\x70\x58\xab\x46\xd5\xe0\x44\x6c\x39\xec\xef\x13\x3f\x15\x08\xff\x28\x8e\xfa\x02\x02\x3a\x15\x62\xae\x0c\x90\x18\xd4\xc9\xd0\x51\x65\xce\xf6\x01\x93\x94\x5f\xb2\x2d\x4b\x25\x25\x8a\xf8\xdc\xec\x6c\x06\x41\xcc\x4a\xf2\x72\xad\x6e\xad\x15\x9a\xf8\x5c\xdd\x95\x71\xd7\xa2\xd4\x17\x2a\xdd\x0c\x87\xf2\xbf\x6c\xa4\xf2\xc9\x5a\x29\x52\xb8\xc3\x9c\x56\x57\xbe\xca\x44\xf4\x8d\xa0\x84\xda\x76\x82\xc0\x96\x60\xdb\x8d\xa1\xa7\x60\xd7\x4a\x3c\x24\x1f\x3e\xe1\xe3\x87\xe9\x3e\xb5\xed\x8e\xca\x24\x9d\xba\xa4\x6c\x62\xb9\xf2\xb6\x9a\x3a\x48\xec\xbd\x01\x95\x92\x99\x38\xd6\x42\x6b\xf4\x39\x9f\x27\xbe\x9c\xa5\x1b\xbd\xd0\x74\x60\xc3\xe0\x85\x39\x21\xdc\x28\x78\x77\x07\x7c\xde\xff\x31\xfb\x31\x8e\xac\x18\x86\x1b\xc5\x3f\x89\x0e\xc7\x71\x3e\x0f\x00\xcb\x3d\xf8\xbc\xc8\x86\xe1\x96\x56\xc7\x91\x8d\xcf\xcb\xf5\x15\x41\x28\x41\x61\xbf\x62\x58\xc2\x2a\xee\xbe\x8e\x4f\x30\xb5\x12\xfe\x21\x3f\x2b\x4a\x88\xb7\xee\xc8\x87\xe1\x17\x4b\xdb\xe0\x46\xf1\xdf\x72\x67\xfd\x7a\x71\x38\x1d\x2d\x61\xff\x72\x53\x6e\xb9\xab\x5d\x15\xa0\xf7\xd6\x97\x30\xb0\xa2\x98\x5b\x72\x5a\x24\xc2\xc8\x37\x34\x20\x4e\xc4\xa1\x64\x45\xa1\x9a\xb4\xf5\x87\x3b\x30\x4a\x27\x8c\x62\x72\xc5\x28\x9d\x60\x58\x51\x8c\x6c\x59\x9d\x23\xf0\xd7\x70\x2b\x2b\x42\x61\xc5\xc8\x86\x21\xcb\x4b\xe2\x7e\xa4\xaa\x5a\x2b\x9c\xea\xf6\x26\x62\x52\x38\xfb\xb6\x16\xfd\x26\xe2\x96\xee\x59\x78\x02\xdb\xba\x62\x80\x44\x6f\x7d\x36\xef\xf8\x92\xca\xb0\x7c\x99\x04\xcf\x2e\x4f\xd8\xdb\xd6\xcd\x13\x70\x29\xa3\x81\x8c\x5a\x66\xe1\x6a\x39\x9b\xb0\x72\x87\xd0\xbf\xd3\x8d\x26\x8c\x2d\x0d\x5f\x24\x41\x3a\x77\x5e\x0c\x0d\xfc\x5f\xc9\x95\x18\xe5\x5d\x1b\x5e\x6e\xb9\x99\xfd\x5c\xde\x9c\x27\x93\xf2\x72\x52\x3f\x7b\xb5\xf6\xec\x0f\x2f\xdc\x7b\xad\xe1\xd1\x0b\x17\x72\x8f\x5d\x74\x6b\x14\x6a\x49\x03\x66\xaa\xcc\x6b\xa9\x26\x63\x53\x73\xda\x98\x9a\xfc\xe3\x32\x8a\x69\xe2\xc0\xef\x34\xfb\xd3\x87\x0a\x4d\x7e\xe7\xf4\x85\x7a\x0c\xf5\xcd\x48\xe0\xab\xc1\x4d\xdd\x02\xcf\xe8\x2f\xd7\xb1\xae\x52\xf3\x5d\x46\x25\xe1\xbd\x37\x17\x10\x9d\xed\x4d\x5c\x35\xae\x5a\x18\x9a\x9a\x34\x6b\x50\xc2\xf1\x02\x86\x94\xcf\xa3\x14\x9f\xd2\xc7\x82\xcc\x9f\x3d\x47\xa4\xf0\x74\x5f\x87\x92\xaf\x34\xd8\x5f\x99\x54\xb0\xfb\x12\x45\xec\xc3\xae\x82\xdd\x67\x65\x4e\xbb\x92\xcd\xed\xe0\xed\xaa\x1f\xbc\x3c\x09\x1b\x2a\x54\x57\x06\x9c\xf3\x10\xbd\x32\xa7\x94\x38\xd3\x57\x8c\x24\xff\x3b\xe1\xfe\xcc\xaf\xfe\xca\x72\x0f\x23\x19\x4d\x0d\xec\xff\x1a\x55\x51\xec\x56\xb9\xb3\x7b\x07\x0b\xc0\x58\x4d\x10\xd9\xf0\x62\x64\xac\x20\x17\xbe\x11\xa5\x94\xb0\x09\x7a\xa1\x47\x11\x25\x6a\x8c\xb8\x9f\xb9\xd1\xce\xf2\x7a\x52\x99\xba\x82\x6f\xd7\xa3\xcb\x15\x5e\x4f\x56\x35\x74\x0a\xee\xee\xe0\x19\xed\x29\xaf\x37\x1b\x1b\xdc\xad\xd2\x64\xbf\xb9\xa5\x9c\x13\xfd\xd9\x75\x47\xf6\x4f\x00\x00\x00\xff\xff\xa6\x0d\xa0\x15\x33\x0b\x00\x00")

func nameServiceGeneratedEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedEndpointsGotemplate,
		"NAME-service/generated/endpoints.gotemplate",
	)
}

func nameServiceGeneratedEndpointsGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/endpoints.gotemplate", size: 2867, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\x4f\x6f\xe3\xb6\x13\x3d\x8b\x9f\x62\x7e\x46\xf0\x83\x1d\x38\x52\xcf\x01\x72\xd9\xec\x76\xb3\x68\xb3\x0d\xd2\xa0\x3d\x2c\x16\x0b\x5a\x1a\x4b\x84\x29\x52\x21\x69\x27\xae\xa0\xef\x5e\x0c\x29\xc9\x4a\xec\xc8\xde\xe6\x10\x38\x16\xe7\xcf\x9b\xf7\x66\x46\x74\xc5\xd3\x15\xcf\x11\xec\x26\x65\x2c\x49\xe0\xa1\x10\x16\x96\x42\x22\x54\x46\x6f\x44\x86\x16\x2c\x9a\x0d\x9a\x0b\x2b\x32\x84\x85\x50\x99\x50\xb9\x85\xa5\x36\xe0\x0a\x84\xfc\xfe\xee\x1a\x9c\xe1\xca\x56\xda\xb8\x98\x42\x7c\x71\xb0\x76\x42\x8a\x7f\xd0\x7a\x93\xfe\x34\xc9\x4d\x95\xc6\x7f\xfa\x70\x31\x63\xa2\xa4\x87\x30\x65\xd1\x44\xa1\x4b\x0a\xe7\xaa\x09\x63\xd1\x24\xd7\x92\xab\x3c\xd6\x26\x4f\x9e\x13\x3a\x49\xb5\x72\xf8\xec\x26\xfe\x4c\xe7\x12\xe3\x81\x09\xc5\x4c\x4a\x74\x3c\xe3\x8e\x93\x3f\x3d\xe8\x53\xc2\x24\x17\xae\x58\x2f\xe2\x54\x97\x49\xae\x2f\x56\xc2\x25\xf4\xf7\x12\x13\xb9\x75\xb5\x13\x3c\x91\x22\x8b\xaa\x05\x4c\xea\x3a\xbe\xfb\xf0\xc5\xe3\xbc\xe3\xae\x80\x8b\xa6\x99\xb0\x19\xf3\x4c\xdd\xf2\x15\x7e\xbe\xbf\xbb\x0e\xf5\x40\xc9\x57\x68\x81\x83\x45\x07\x7a\x09\xa8\xb2\x4a\x0b\xe5\x2c\xf0\x0d\x17\x92\x2f\x24\x02\xa7\x73\x4f\x58\x5d\x7f\xd6\x5f\x79\x89\x10\xb7\xe9\x62\xfa\xd6\x34\x1d\x37\xcb\xb5\x4a\x5f\x25\x98\xa6\xee\x19\x5a\x26\xe2\xeb\xf0\x39\x1f\xa4\xf9\xd4\xfd\x37\x83\x6a\x11\x8f\x27\x80\x9a\x45\x41\xd5\x3f\x2a\x27\xb4\xb2\x70\x79\x05\xdf\xbe\xbf\x60\xae\xd5\x29\x18\xd4\x2c\x8a\xe0\xd0\xf1\x07\x5c\x6a\x83\xd3\x8e\xff\x07\xdd\x22\x9b\xcd\x59\xd4\xb0\xc8\xa0\x5b\x1b\x05\xff\x27\xd7\xe0\x50\x7b\xa6\xeb\x1a\x1e\xf4\xef\xfa\x09\xcd\x4b\x80\xd0\x34\x2c\xaa\x6b\xc3\x55\x8e\x70\x26\x08\x56\x7f\x7e\x8b\xae\xd0\x99\x25\x8b\xa8\xae\x3b\xf7\x33\xd1\x56\x76\xf9\x0a\xdf\x57\x7c\x6a\x89\x63\x51\x14\xa5\xee\x79\x4e\x9f\x3d\x5f\x71\x5d\xf7\xae\x1d\x75\xde\xe2\x23\xa6\x3a\xf3\xbc\x0f\x2c\xee\xf1\x71\x8d\x36\x18\x7c\x52\x07\x0d\x6c\xa5\x95\x45\x6f\xf1\x82\xda\x38\x8e\xe9\x21\x11\x52\xd7\x17\x24\x18\x55\xd0\xb0\xc6\x37\xd1\x8e\x18\x10\x65\x25\xb1\x44\xd2\x92\xa6\xe6\x88\x82\x42\x39\x34\x4b\x9e\x22\x73\xdb\x0a\x87\x71\xac\x33\xeb\xd4\x41\xcd\x8e\xf3\x78\x80\x46\x80\x57\x3c\xde\x70\x95\x49\x34\x6c\x07\x3e\x20\x6f\xc3\xf8\x45\x30\xc8\xee\xf4\xae\x90\xd3\x6b\x38\x0a\xd5\x0f\xc4\xd4\xc2\xf9\x2e\xd5\x6c\x17\xbe\x47\x7f\x78\x48\x0c\x3e\xc2\xf9\x70\x28\xce\x44\xdc\x2a\xfa\xb0\xad\x3a\x50\x33\x98\xee\x1b\x05\x55\x07\x56\x73\x40\x63\x34\x25\x67\xd1\x0f\x0a\x5d\xf9\x27\x04\x9b\x7a\x6a\x8f\xcf\x30\x27\xd4\x2d\x84\xcd\x63\x99\xb1\x48\x2c\xbd\xd3\xff\xae\x40\x09\x49\xa1\xba\x49\x51\x42\xfa\x78\xc3\xe9\x31\x58\xc5\xa7\x40\x9b\xcd\xc9\x9d\x35\xac\xae\x83\x50\x24\x53\x4b\x75\xe8\xea\xe3\x3c\x27\x09\x8c\x0d\x00\x08\x5a\x61\xaf\x16\x7a\x70\x68\x2d\x7e\x25\xa1\x5c\xc1\x1d\xc9\xb0\x41\x43\x0b\xd0\x37\x7a\x58\x7b\xfb\xfd\x66\xda\xc8\x4e\x03\x87\xb5\x45\x73\x91\xe9\x92\x0b\x35\x66\x1c\xc3\x9d\x11\x25\x37\x42\x6e\xc9\x65\xb9\x96\x20\x94\xdf\xbd\x83\xf5\x39\x56\xc7\xf4\xc7\x7e\x97\x50\x2d\xf7\xf8\xb8\xeb\xca\x9a\x5a\x62\xf0\x6d\x28\x3d\xb5\xd4\xe5\x55\xe7\x73\x48\x9e\xbd\xf6\x1a\xe8\xf9\xb8\xa7\x14\x51\x74\x2d\x05\x0d\xcd\xfb\xa5\x0a\x9d\x31\xaa\x55\x30\xf9\x0f\x62\x55\x72\x7b\xaa\x54\x21\xc7\x5b\x5a\xa5\xbe\xda\x71\xad\x42\x84\xb7\xc5\x22\x30\x27\xca\x45\xa6\xbd\x60\x95\xdc\x9e\x36\x51\xc3\x19\x94\xdb\x91\xf9\x0a\x2f\x85\x93\x44\x1b\x7d\x7f\x1c\x14\x2d\x78\x1c\x13\xed\x54\x41\x82\x7c\xe3\x12\x9f\x34\x60\xa3\x85\x1c\x12\xad\x47\x70\xa2\x66\xb6\x22\x16\xfb\x46\xfa\x59\xc5\x6c\x35\x36\x66\xef\x57\xec\xed\x8d\xd8\x09\x36\xba\x11\x4f\xdc\x75\x47\xe5\x1a\xdd\x88\x2f\xa6\x6c\xac\x8e\xc3\x7a\xb5\x25\xfe\xc4\x46\xec\xf0\xbc\x7b\x23\x26\x09\xdc\xa0\xac\xd0\x58\x16\xd0\xef\xdd\x31\x0f\xbf\xec\xcb\x0c\xce\x3b\xd3\xf8\xf6\xe3\xec\xb5\x05\x61\xa5\x3b\xcb\x6a\x0e\x1b\x0f\xd8\xcb\x7f\x5e\x66\xfe\x35\x2c\x96\xb0\x19\xbe\x96\xc3\xcf\x02\x84\x15\x6e\xbd\xd2\x59\x86\x19\x2c\xb4\x2b\x88\xde\x2e\x0d\xdd\x81\x4a\xee\x60\xba\x9a\xc1\x53\x21\xd2\xc2\x9b\x4a\x09\x92\xc4\x6a\xa3\x70\x95\xf9\x7b\x1d\xfd\xcc\x89\xaf\xb9\xd2\x4a\xa4\x5c\xde\x20\xcf\xd0\xfc\x86\x5b\xfa\xcd\xe0\xda\x44\x56\x87\x7e\x11\x0e\x52\xae\x60\x81\x5d\x88\x34\x45\x6b\x31\xa3\xdc\x28\x5c\x81\xa6\xcd\xdc\xde\x70\xe1\xaa\x2f\xf6\x6f\xe1\x8a\xbf\xb8\x5c\x63\xb8\x75\x50\xb1\xdf\x7e\xf9\x3e\x3b\x6a\xf8\x06\xba\xe9\x6a\xb6\x8b\xe0\xaf\xaf\xbd\x76\xa9\x7b\x66\x0d\xfb\x37\x00\x00\xff\xff\x09\x00\x51\xc2\x47\x0e\x00\x00")

func nameServiceGeneratedTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_grpcGotemplate,
		"NAME-service/generated/transport_grpc.gotemplate",
	)
}

func nameServiceGeneratedTransport_grpcGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_grpc.gotemplate", size: 3655, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func nameServiceGeneratedTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_httpGotemplate,
		"NAME-service/generated/transport_http.gotemplate",
	)
}

func nameServiceGeneratedTransport_httpGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_http.gotemplate", size: 106, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersServerHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func nameServiceHandlersServerHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersServerHooksGotemplate,
		"NAME-service/handlers/server/hooks.gotemplate",
	)
}

func nameServiceHandlersServerHooksGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersServerHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/server/hooks.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersServerServer_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func nameServiceHandlersServerServer_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersServerServer_handlerGotemplate,
		"NAME-service/handlers/server/server_handler.gotemplate",
	)
}

func nameServiceHandlersServerServer_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersServerServer_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/server/server_handler.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceMiddlewaresEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func nameServiceMiddlewaresEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceMiddlewaresEndpointsGotemplate,
		"NAME-service/middlewares/endpoints.gotemplate",
	)
}

func nameServiceMiddlewaresEndpointsGotemplate() (*asset, error) {
	bytes, err := nameServiceMiddlewaresEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/middlewares/endpoints.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceMiddlewaresServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func nameServiceMiddlewaresServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceMiddlewaresServiceGotemplate,
		"NAME-service/middlewares/service.gotemplate",
	)
}

func nameServiceMiddlewaresServiceGotemplate() (*asset, error) {
	bytes, err := nameServiceMiddlewaresServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/middlewares/service.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"NAME-service/NAME-cli-client/client_main.gotemplate": nameServiceNameCliClientClient_mainGotemplate,
	"NAME-service/NAME-server/server_main.gotemplate": nameServiceNameServerServer_mainGotemplate,
	"NAME-service/generated/cli/handlers/client_handler.gotemplate": nameServiceGeneratedCliHandlersClient_handlerGotemplate,
	"NAME-service/generated/client/grpc/client.gotemplate": nameServiceGeneratedClientGrpcClientGotemplate,
	"NAME-service/generated/client/http/client.gotemplate": nameServiceGeneratedClientHttpClientGotemplate,
	"NAME-service/generated/endpoints.gotemplate": nameServiceGeneratedEndpointsGotemplate,
	"NAME-service/generated/transport_grpc.gotemplate": nameServiceGeneratedTransport_grpcGotemplate,
	"NAME-service/generated/transport_http.gotemplate": nameServiceGeneratedTransport_httpGotemplate,
	"NAME-service/handlers/server/hooks.gotemplate": nameServiceHandlersServerHooksGotemplate,
	"NAME-service/handlers/server/server_handler.gotemplate": nameServiceHandlersServerServer_handlerGotemplate,
	"NAME-service/middlewares/endpoints.gotemplate": nameServiceMiddlewaresEndpointsGotemplate,
	"NAME-service/middlewares/service.gotemplate": nameServiceMiddlewaresServiceGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"NAME-service": &bintree{nil, map[string]*bintree{
		"NAME-cli-client": &bintree{nil, map[string]*bintree{
			"client_main.gotemplate": &bintree{nameServiceNameCliClientClient_mainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"server_main.gotemplate": &bintree{nameServiceNameServerServer_mainGotemplate, map[string]*bintree{}},
		}},
		"generated": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"handlers": &bintree{nil, map[string]*bintree{
					"client_handler.gotemplate": &bintree{nameServiceGeneratedCliHandlersClient_handlerGotemplate, map[string]*bintree{}},
				}},
			}},
			"client": &bintree{nil, map[string]*bintree{
				"grpc": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientGrpcClientGotemplate, map[string]*bintree{}},
				}},
				"http": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientHttpClientGotemplate, map[string]*bintree{}},
				}},
			}},
			"endpoints.gotemplate": &bintree{nameServiceGeneratedEndpointsGotemplate, map[string]*bintree{}},
			"transport_grpc.gotemplate": &bintree{nameServiceGeneratedTransport_grpcGotemplate, map[string]*bintree{}},
			"transport_http.gotemplate": &bintree{nameServiceGeneratedTransport_httpGotemplate, map[string]*bintree{}},
		}},
		"handlers": &bintree{nil, map[string]*bintree{
			"server": &bintree{nil, map[string]*bintree{
				"hooks.gotemplate": &bintree{nameServiceHandlersServerHooksGotemplate, map[string]*bintree{}},
				"server_handler.gotemplate": &bintree{nameServiceHandlersServerServer_handlerGotemplate, map[string]*bintree{}},
			}},
		}},
		"middlewares": &bintree{nil, map[string]*bintree{
			"endpoints.gotemplate": &bintree{nameServiceMiddlewaresEndpointsGotemplate, map[string]*bintree{}},
			"service.gotemplate": &bintree{nameServiceMiddlewaresServiceGotemplate, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

